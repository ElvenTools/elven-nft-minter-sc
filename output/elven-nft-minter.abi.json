{
    "buildInfo": {
        "rustc": {
            "version": "1.61.0-nightly",
            "commitHash": "e95b10ba4ac4564ed25f7eef143e3182c33b3902",
            "commitDate": "2022-03-13",
            "channel": "Nightly",
            "short": "rustc 1.61.0-nightly (e95b10ba4 2022-03-13)"
        },
        "contractCrate": {
            "name": "elven-nft-minter",
            "version": "1.5.2"
        },
        "framework": {
            "name": "elrond-wasm",
            "version": "0.29.3"
        }
    },
    "name": "ElvenTools",
    "constructor": {
        "inputs": [
            {
                "name": "image_base_cid",
                "type": "bytes"
            },
            {
                "name": "metadata_base_cid",
                "type": "bytes"
            },
            {
                "name": "amount_of_tokens",
                "type": "u32"
            },
            {
                "name": "tokens_limit_per_address",
                "type": "u32"
            },
            {
                "name": "royalties",
                "type": "BigUint"
            },
            {
                "name": "selling_price",
                "type": "BigUint"
            },
            {
                "name": "file_extension",
                "type": "optional<bytes>",
                "multi_arg": true
            },
            {
                "name": "tags",
                "type": "optional<bytes>",
                "multi_arg": true
            },
            {
                "name": "provenance_hash",
                "type": "optional<bytes>",
                "multi_arg": true
            },
            {
                "name": "is_metadata_in_uris",
                "type": "optional<bool>",
                "multi_arg": true
            }
        ],
        "outputs": []
    },
    "endpoints": [
        {
            "name": "issueToken",
            "onlyOwner": true,
            "mutability": "mutable",
            "payableInTokens": [
                "EGLD"
            ],
            "inputs": [
                {
                    "name": "token_name",
                    "type": "bytes"
                },
                {
                    "name": "token_ticker",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "setLocalRoles",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "pauseMinting",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "startMinting",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "setDrop",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "amount_of_tokens_per_drop",
                    "type": "u32"
                },
                {
                    "name": "tokens_limit_per_address_per_drop",
                    "type": "optional<u32>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "unsetDrop",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "setNewPrice",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "price",
                    "type": "BigUint"
                }
            ],
            "outputs": []
        },
        {
            "name": "changeBaseCids",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "image_base_cid",
                    "type": "bytes"
                },
                {
                    "name": "metadata_base_cid",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "setNewTokensLimitPerAddress",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "limit",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "giveaway",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                },
                {
                    "name": "amount_of_tokens",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "claimScFunds",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "populateIndexes",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "amount",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "enableAllowlist",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "disableAllowlist",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "populateAllowlist",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "addresses",
                    "type": "List<Address>"
                }
            ],
            "outputs": []
        },
        {
            "name": "mint",
            "mutability": "mutable",
            "payableInTokens": [
                "EGLD"
            ],
            "inputs": [
                {
                    "name": "amount_of_tokens",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "shuffle",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "getDropTokensLeft",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u32"
                }
            ]
        },
        {
            "name": "getTotalTokensLeft",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u32"
                }
            ]
        },
        {
            "name": "getMintedPerAddressPerDrop",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "u32"
                }
            ]
        },
        {
            "name": "getAllowlistAddressCheck",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "getAllowlistSize",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u32"
                }
            ]
        },
        {
            "name": "isMintActive",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "getNftTokenId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getNftTokenName",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getNftPrice",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getProvenanceHash",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getTokensLimitPerAddressTotal",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u32"
                }
            ]
        },
        {
            "name": "getMintedPerAddressTotal",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "u32"
                }
            ]
        },
        {
            "name": "getTokensLimitPerAddressPerDrop",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u32"
                }
            ]
        },
        {
            "name": "isAllowlistEnabled",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "isDropActive",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        }
    ],
    "hasCallback": true,
    "types": {}
}
